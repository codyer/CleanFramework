package com.cody.app.business.customer;import android.os.Bundle;import android.support.v7.widget.RecyclerView;import android.view.View;import com.cody.app.R;import com.cody.app.databinding.ActivityPotentialCustomerBinding;import com.cody.app.framework.activity.ListWithHeaderBaseActivity;import com.cody.app.framework.adapter.BaseRecycleViewAdapter;import com.cody.handler.business.presenter.PotentialCustomerPresenter;import com.cody.handler.business.viewmodel.ItemPotentialCustomerViewModel;import com.cody.handler.business.viewmodel.PotentialCustomerViewModel;import com.cody.handler.framework.viewmodel.HeaderViewModel;import com.cody.repository.business.bean.SendCouponBean;import com.cody.repository.framework.statistics.BuryingPointUtils;import com.cody.xf.utils.ActivityUtil;import com.cody.xf.utils.ResourceUtil;import com.cody.xf.widget.pullloadmorerecyclerview.PullLoadMoreRecyclerView;/** * 潜在客户页面 */public class PotentialCustomerActivity extends ListWithHeaderBaseActivity<PotentialCustomerPresenter,        PotentialCustomerViewModel, ItemPotentialCustomerViewModel, ActivityPotentialCustomerBinding> {    public static void startLatentCustomer() {        ActivityUtil.navigateTo(PotentialCustomerActivity.class);    }    @Override    protected void initHeader(HeaderViewModel header) {        header.setVisible(true);        header.setTitle("潜在客户");        header.setLeft(true);        header.setLeftResId(R.drawable.xf_ic_back_black);        header.setRightIsText(true);        header.setRightText("发券");        header.setRightColorId(ResourceUtil.getColor(R.color.main_blue));        header.setLineVisible(false);    }    @Override    protected BaseRecycleViewAdapter<ItemPotentialCustomerViewModel> buildRecycleViewAdapter() {        return new BaseRecycleViewAdapter<ItemPotentialCustomerViewModel>(getViewModel()) {            @Override            public int getItemLayoutId(int viewType) {                return R.layout.item_potential_customer;            }        };    }    @Override    protected PullLoadMoreRecyclerView buildPullLoadMoreRecyclerView() {        return getBinding().fwList;    }    @Override    protected int getLayoutID() {        return R.layout.activity_potential_customer;    }    @Override    protected int getEmptyViewId() {        return R.layout.customer_empty_view;    }    @Override    protected PotentialCustomerPresenter buildPresenter() {        return new PotentialCustomerPresenter();    }    @Override    protected PotentialCustomerViewModel buildViewModel(Bundle savedInstanceState) {        PotentialCustomerViewModel viewModel = new PotentialCustomerViewModel();        return viewModel;    }    @Override    public void onItemClick(RecyclerView parent, View view, int position, long id) {        if (getViewModel().getIsSendCoupons().get()) {            getViewModel().get(position).toggleCheck();            if (getViewModel().get(position).getCheck().get()) {                getViewModel().addCheckCount();            } else {                getViewModel().subtractCheckCount();            }        }    }    @Override    public void onClick(View v) {        super.onClick(v);        switch (v.getId()) {            case R.id.headerRightText:                //埋点 B端龙果APP潜在客户_发券按钮                BuryingPointUtils.build(MyCustomerActivity.class, 4235).submitF();                getViewModel().toggleIsSendCoupons();                if (getViewModel().getIsSendCoupons().get()) {                    getViewModel().getHeaderViewModel().setRightColorId(ResourceUtil.getColor(R.color.gray_333333));                } else {                    getViewModel().getHeaderViewModel().setRightColorId(ResourceUtil.getColor(R.color.main_blue));                }                getPresenter().toggleIsSendCoupon();                break;            case R.id.filterAll:                //埋点 B端龙果APP潜在客户_Tab                BuryingPointUtils.build(MyCustomerActivity.class, 4236).addTag("全部").submitF();                if (getViewModel().getFilterType().get() != PotentialCustomerViewModel.FILTER_TYPE_ALL) {                    getViewModel().setFilterType(PotentialCustomerViewModel.FILTER_TYPE_ALL);                    onRefresh();                    scrollToTop();                }                break;            case R.id.browseShop:                //埋点 B端龙果APP潜在客户_Tab                BuryingPointUtils.build(MyCustomerActivity.class, 4236).addTag("浏览店铺").submitF();                if (getViewModel().getFilterType().get() != PotentialCustomerViewModel.FILTER_TYPE_BROWER_SHOP) {                    getViewModel().setFilterType(PotentialCustomerViewModel.FILTER_TYPE_BROWER_SHOP);                    onRefresh();                    scrollToTop();                }                break;            case R.id.browseGood:                //埋点 B端龙果APP潜在客户_Tab                BuryingPointUtils.build(MyCustomerActivity.class, 4236).addTag("浏览单品").submitF();                if (getViewModel().getFilterType().get() != PotentialCustomerViewModel.FILTER_TYPE_BROWER_GOOD) {                    getViewModel().setFilterType(PotentialCustomerViewModel.FILTER_TYPE_BROWER_GOOD);                    onRefresh();                    scrollToTop();                }                break;            case R.id.checkAll:                //埋点 B端龙果APP潜在客户发券状态_全选按钮                BuryingPointUtils.build(MyCustomerActivity.class, 4237).submitF();                getPresenter().toggleCheckAll();                onRefresh();                break;            case R.id.unSendCoupons:                //埋点 B端龙果APP潜在客户发券状态_未发券按钮                BuryingPointUtils.build(MyCustomerActivity.class, 4238).submitF();                getPresenter().toggleUnSendCoupon();                onRefresh();                break;            case R.id.confirm:                //埋点 B端龙果APP潜在客户发券状态_确认按钮                BuryingPointUtils.build(MyCustomerActivity.class, 4239).submitF();                SendCouponBean sendCouponBean = new SendCouponBean();                sendCouponBean.setQueryField(getViewModel().getQueryField());                sendCouponBean.setUserList(getViewModel().getUserListBean());                if (getViewModel().getUncouponCheck().get()) {                    sendCouponBean.setType("1");                }                sendCouponBean.setSelectedUserCount(getViewModel().getCheckCount().get());                CouponsActivity.startCoupons(sendCouponBean                        , getViewModel().getTotalCheck().get()                                || getViewModel().getUncouponCheck().get());                break;        }    }}