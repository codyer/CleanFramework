package com.cody.handler.business.viewmodel;import android.databinding.ObservableBoolean;import android.text.TextUtils;import com.cody.handler.framework.viewmodel.XItemViewModel;/** * Created by chen.huarong on 2018/8/16. */public class ItemPotentialCustomerViewModel extends XItemViewModel {    private final ObservableBoolean mIsSendCoupons = new ObservableBoolean(false);//是否是发券状态    private final ObservableBoolean mCheck = new ObservableBoolean(false);//是否选中    private final ObservableBoolean mIsUnSendCoupon = new ObservableBoolean(false);//是否选中未发券    private String userAvatar;    /**     * addCartFlag : 1     * addWishListFlag : 1     * avatar : http://img1.uat1.rs.com/g1/M00/02/92/wKh8ylpNzG6AG-91AAF5vA-WndA502.jpg     * couponFlag : 1     * gender : 1     * id : 6622     * imFlag : 1     * isNew : 0     * lastBehaviorTime : 2018-08-16 18:25:39     * mobile : 138****1234     * openId : 123     * orderFlag : 0     * orderTotalAmount : 0     * scanGoodsFlag : 1     * scanShopFlag : 1     * sendCouponCount : 1     * shopId : 6622     * type : 2     * lastOrderTime : 1534471208435     */    private boolean addCartFlag;//是否加购物车，0否,1是    private boolean addWishListFlag;//是否加心愿单，0否,1是    private String avatar;//头像图片地址    private boolean couponFlag;//是否已领券，0否,1是    private int gender;//性别, 0 female 1 male -1不显示性别    private String id;    private boolean imFlag;//是否创建过im咨询，0否,1是    private boolean isNew;//是否新增客户，0否,1是    private String lastBehaviorTime;//最后一次行为时间    private String mobile;//手机号(显示用带*号)    private String openId;//客户openId    private boolean orderFlag;//是否下单，0否,1是    private double orderTotalAmount;    private boolean scanGoodsFlag;//是否浏览该店铺内商品，0否,1是    private boolean scanShopFlag;//是否浏览店铺，0否,1是    private int sendCouponCount;//已发券次数    private String sendCouponText;//发券文案    private int shopId;//店铺id    private int type;//客户的类型，1潜在客户,2意向客户,3成交客户    private String lastOrderTime;//最后一次下单时间    private String name;//客户姓名    private int lastBehaviorFlag;//最后一次行为:1浏览店铺,2浏览单品,3IM咨询,4加购物车,5加心愿单,6领券,7下单    private int itemWidth;//item宽度    private String phoneNumber;//手机号(拨打电话用)    private String imId;//imId    public boolean getAddCartFlag() {        return addCartFlag;    }    public void setAddCartFlag(boolean addCartFlag) {        this.addCartFlag = addCartFlag;    }    public boolean getAddWishListFlag() {        return addWishListFlag;    }    public void setAddWishListFlag(boolean addWishListFlag) {        this.addWishListFlag = addWishListFlag;    }    public String getAvatar() {        return avatar;    }    public void setAvatar(String avatar) {        this.avatar = avatar;    }    public boolean getCouponFlag() {        return couponFlag;    }    public void setCouponFlag(boolean couponFlag) {        this.couponFlag = couponFlag;    }    public int getGender() {        return gender;    }    public void setGender(int gender) {        this.gender = gender;    }    public String getId() {        return id;    }    public void setId(String id) {        this.id = id;    }    public boolean getImFlag() {        return imFlag;    }    public void setImFlag(boolean imFlag) {        this.imFlag = imFlag;    }    public boolean getIsNew() {        return isNew;    }    public void setIsNew(boolean isNew) {        this.isNew = isNew;    }    public String getLastBehaviorTime() {        return lastBehaviorTime;    }    public String getLastBrowseTimeText() {        return "最后一次浏览时间 " + (TextUtils.isEmpty(lastBehaviorTime) ? "暂无" : lastBehaviorTime);    }    public void setLastBehaviorTime(String lastBehaviorTime) {        this.lastBehaviorTime = lastBehaviorTime;    }    public String getRecentBehaviorText() {        return "最近行为 " + (TextUtils.isEmpty(lastBehaviorTime) ? "暂无" : lastBehaviorTime);    }    public String getMobile() {        return mobile;    }    public void setMobile(String mobile) {        this.mobile = mobile;    }    public String getOpenId() {        return openId;    }    public void setOpenId(String openId) {        this.openId = openId;    }    public boolean getOrderFlag() {        return orderFlag;    }    public void setOrderFlag(boolean orderFlag) {        this.orderFlag = orderFlag;    }    public double getOrderTotalAmount() {        return orderTotalAmount;    }    public void setOrderTotalAmount(double orderTotalAmount) {        this.orderTotalAmount = orderTotalAmount;    }    public String getOrderTotalAmountText() {        String orderTotalAmountText;        if (orderTotalAmount % 1 == 0) {//整数不显示小数点            orderTotalAmountText = String.valueOf((int) orderTotalAmount);        } else {            orderTotalAmountText = String.valueOf(orderTotalAmount);        }        return "累计消费 " + orderTotalAmountText;    }    public boolean getScanGoodsFlag() {        return scanGoodsFlag;    }    public void setScanGoodsFlag(boolean scanGoodsFlag) {        this.scanGoodsFlag = scanGoodsFlag;    }    /**     * 潜在客户标签间隔线是否显示     *     * @return     */    public boolean showPotentialFlagLine() {        return scanShopFlag && scanGoodsFlag;    }    /**     * 潜在客户标签布局是否显示     * @return     */    public boolean showPotentialFlagLayout(){        return scanShopFlag || scanGoodsFlag;    }    public boolean getScanShopFlag() {        return scanShopFlag;    }    public void setScanShopFlag(boolean scanShopFlag) {        this.scanShopFlag = scanShopFlag;    }    public int getSendCouponCount() {        return sendCouponCount;    }    public void setSendCouponCount(int sendCouponCount) {        this.sendCouponCount = sendCouponCount;    }    public String getSendCouponText() {        if (sendCouponCount == 0) {            return "未发券";        }        return String.format("已发券%d次", sendCouponCount);    }    public int getShopId() {        return shopId;    }    public void setShopId(int shopId) {        this.shopId = shopId;    }    public int getType() {        return type;    }    public void setType(int type) {        this.type = type;    }    public String getUserAvatar() {        return userAvatar;    }    public void setUserAvatar(String userAvatar) {        this.userAvatar = userAvatar;    }    public ObservableBoolean getIsSendCoupons() {        return mIsSendCoupons;    }    public void setIsSendCoupons(boolean value) {        mIsSendCoupons.set(value);    }    public ObservableBoolean getCheck() {        return mCheck;    }    public void setCheck(boolean value) {        mCheck.set(value);    }    public void toggleCheck() {        mCheck.set(!mCheck.get());    }    public ObservableBoolean getIsUnSendCoupon() {        return mIsUnSendCoupon;    }    public void setIsUnSendCoupon(boolean value) {        mIsUnSendCoupon.set(value);    }    public int getItemWidth() {        return itemWidth;    }    public void setItemWidth(int itemWidth) {        this.itemWidth = itemWidth;    }    public String getName() {        return name;    }    public void setName(String name) {        this.name = name;    }    public int getLastBehaviorFlag() {        return lastBehaviorFlag;    }    public void setLastBehaviorFlag(int lastBehaviorFlag) {        this.lastBehaviorFlag = lastBehaviorFlag;    }    /**     * 最后一次行为:1浏览店铺,2浏览单品,3IM咨询,4加购物车,5加心愿单,6领券,7下单     *     * @return     */    public String getLastBehaviorText() {        switch (lastBehaviorFlag) {            case 1:                return "浏览店铺";            case 2:                return "浏览单品";            case 3:                return "IM咨询";            case 4:                return "加购物车";            case 5:                return "加心愿单";            case 6:                return "领券";            case 7:                return "下单";        }        return "";    }    public String getLastOrderTimeText() {        return "下单时间 " + (TextUtils.isEmpty(lastOrderTime) ? "暂无" : lastOrderTime);    }    public String getLastOrderTime() {        return lastOrderTime;    }    public void setLastOrderTime(String lastOrderTime) {        this.lastOrderTime = lastOrderTime;    }    public String getPhoneNumber() {        return phoneNumber;    }    public void setPhoneNumber(String phoneNumber) {        this.phoneNumber = phoneNumber;    }    public String getImId() {        return imId;    }    public void setImId(String imId) {        this.imId = imId;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        if (!super.equals(o)) return false;        ItemPotentialCustomerViewModel that = (ItemPotentialCustomerViewModel) o;        if (addCartFlag != that.addCartFlag) return false;        if (addWishListFlag != that.addWishListFlag) return false;        if (couponFlag != that.couponFlag) return false;        if (gender != that.gender) return false;        if (imFlag != that.imFlag) return false;        if (isNew != that.isNew) return false;        if (orderFlag != that.orderFlag) return false;        if (orderTotalAmount != that.orderTotalAmount) return false;        if (scanGoodsFlag != that.scanGoodsFlag) return false;        if (scanShopFlag != that.scanShopFlag) return false;        if (sendCouponCount != that.sendCouponCount) return false;        if (lastBehaviorFlag != that.lastBehaviorFlag) return false;        if (sendCouponText != that.sendCouponText) return false;        if (type != that.type) return false;        if (shopId != that.shopId) return false;        if (mIsSendCoupons.get() != (that.mIsSendCoupons.get()))            return false;        if (mCheck.get() != that.mCheck.get()) return false;        if (mIsUnSendCoupon.get() != that.mIsUnSendCoupon.get())            return false;        if (userAvatar != null ? !userAvatar.equals(that.userAvatar) : that.userAvatar != null)            return false;        if (avatar != null ? !avatar.equals(that.avatar) : that.avatar != null) return false;        if (id != null ? !id.equals(that.id) : that.id != null) return false;        if (lastBehaviorTime != null ? !lastBehaviorTime.equals(that.lastBehaviorTime) : that.lastBehaviorTime != null)            return false;        if (mobile != null ? !mobile.equals(that.mobile) : that.mobile != null) return false;        if (name != null ? !name.equals(that.name) : that.name != null) return false;        if (phoneNumber != null ? !phoneNumber.equals(that.phoneNumber) : that.phoneNumber != null) return false;        if (imId != null ? !imId.equals(that.imId) : that.imId != null) return false;        if (openId != null ? !openId.equals(that.openId) : that.openId != null) return false;        return lastOrderTime != null ? lastOrderTime.equals(that.lastOrderTime) : that                .lastOrderTime == null;    }    @Override    public int hashCode() {        int result = super.hashCode();        result = 31 * result + (mIsSendCoupons != null ? mIsSendCoupons.hashCode() : 0);        result = 31 * result + (mCheck != null ? mCheck.hashCode() : 0);        result = 31 * result + (mIsUnSendCoupon != null ? mIsUnSendCoupon.hashCode() : 0);        result = 31 * result + (userAvatar != null ? userAvatar.hashCode() : 0);        result = 31 * result + (addCartFlag ? 1 : 0);        result = 31 * result + (addWishListFlag ? 1 : 0);        result = 31 * result + (avatar != null ? avatar.hashCode() : 0);        result = 31 * result + (couponFlag ? 1 : 0);        result = 31 * result + gender;        result = 31 * result + shopId;        result = 31 * result + (id != null ? id.hashCode() : 0);        result = 31 * result + (imFlag ? 1 : 0);        result = 31 * result + (isNew ? 1 : 0);        result = 31 * result + (lastBehaviorTime != null ? lastBehaviorTime.hashCode() : 0);        result = 31 * result + (mobile != null ? mobile.hashCode() : 0);        result = 31 * result + (name != null ? name.hashCode() : 0);        result = 31 * result + (phoneNumber != null ? phoneNumber.hashCode() : 0);        result = 31 * result + (imId != null ? imId.hashCode() : 0);        result = 31 * result + (openId != null ? openId.hashCode() : 0);        result = 31 * result + (orderFlag ? 1 : 0);        result = 31 * result + (int) orderTotalAmount;        result = 31 * result + (scanGoodsFlag ? 1 : 0);        result = 31 * result + (scanShopFlag ? 1 : 0);        result = 31 * result + sendCouponCount;        result = 31 * result + lastBehaviorFlag;        result = 31 * result + (sendCouponText != null ? sendCouponText.hashCode() : 0);        result = 31 * result + type;        result = 31 * result + (lastOrderTime != null ? lastOrderTime.hashCode() : 0);        return result;    }}