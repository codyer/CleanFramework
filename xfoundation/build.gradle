apply plugin: 'com.android.library'
apply plugin: 'realm-android'

def MODULE_NAME = 'xf'

android {
    dataBinding {
        enabled true
    }

    // 编译sdk版本
    compileSdkVersion rootProject.ext.compileSdkVersion

    // 构建工具版本

    // 主要是用来设置Library发布所有的variants
    publishNonDefault true

    // 资源前缀
    resourcePrefix MODULE_NAME + '_'

    // 默认配置
    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName // 版本号
        versionNameSuffix '_' + MODULE_NAME
        // dex突破65535的限制
        multiDexEnabled true
        ndk {
            // 设置支持的 SO 库构架
            abiFilters 'armeabi-v7a', 'arm64-v8a'
            // 后面的还未提供 'armeabi','mips64', 'x86_64'
        }
    }

    // 构建类型，此处配置debug和release版本的一些参数，像混淆、签名配置。
    buildTypes {
        debug {
            debuggable true
        }
        // release 包的配置
        release {
            // 启用资源压缩 因为您可能需要编辑 proguard-rules.pro 文件以保留动态创建或调用的类或方法，然后再开始移除资源
//            shrinkResources true
            // 开启代码压缩
            minifyEnabled false
            // 对齐
            zipAlignEnabled true
            // 指定混淆文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    return void
}

dependencies {
    api fileTree(include: ['*.jar'], dir: 'libs')
    //高德地图
    api 'com.amap.api:map2d:5.2.0'
    //    api 'com.amap.api:location:3.7.0'
    api 'com.amap.api:search:6.5.0.1'
    //    api rootProject.ext.dependencies["android-pdfview"]
    //生成二维码
    api rootProject.ext.dependencies["BGAQRCode-Android"]
    api rootProject.ext.dependencies["support-v4"]
    api rootProject.ext.dependencies["appcompat-v7"]
    api rootProject.ext.dependencies["design"]
    api rootProject.ext.dependencies["recyclerview-v7"]
    api rootProject.ext.dependencies["volley"]
    api rootProject.ext.dependencies["glide-transformations"]
    api rootProject.ext.dependencies["glide"]
    api rootProject.ext.dependencies["okhttp3"]
    api rootProject.ext.dependencies["okio"]
    api rootProject.ext.dependencies["gson"]
    api rootProject.ext.dependencies["httpcore"]
    api rootProject.ext.dependencies["multidex"]
    api rootProject.ext.dependencies["constraint"]
    api rootProject.ext.dependencies["imagepicker"]
    api rootProject.ext.dependencies["bugly-crashreport"]
    api rootProject.ext.dependencies["bugly-nativecrashreport"]
    //    api rootProject.ext.dependencies["overscroll"]
    //    api rootProject.ext.dependencies["droidsonroids"]
    api rootProject.ext.dependencies["packer"]
    api rootProject.ext.dependencies["baidu-mobstat"]
    api rootProject.ext.dependencies["amap"]
    api rootProject.ext.dependencies["easypermissions"]
    api rootProject.ext.dependencies["cardview"]
    api rootProject.ext.dependencies["jpush"]
    api rootProject.ext.dependencies["jcore"]
    api rootProject.ext.dependencies["umeng-common"]
    api rootProject.ext.dependencies["umeng-utdid"]
    api rootProject.ext.dependencies["share-core"]
    api rootProject.ext.dependencies["share-qq"]
    api rootProject.ext.dependencies["share-wechat"]
    api rootProject.ext.dependencies["share-sina"]
    api rootProject.ext.dependencies["share-widget"]
    api rootProject.ext.dependencies["shortcutbadger"]
//    api rootProject.ext.dependencies["tabStrip"]
    debugApi rootProject.ext.dependencies["leakcanary-android"]
    releaseApi rootProject.ext.dependencies["leakcanary-android-no-op"]
}